{"version":3,"sources":["../../src/pages/reset-password/reset-password.module.ts","../../src/validators/email.ts","../../src/pages/reset-password/reset-password.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACK;AAUrD;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QARnC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,0EAAiB;aAClB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,0EAAiB,CAAC;aAC5C;SACF,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;ACVpC;AAAA;IAAA;IAeA,CAAC;IAdQ,sBAAO,GAAd,UAAe,OAAoB;QACjC,IAAM,EAAE,GAAG,4DAA4D;aACtE,IAAI,CACH,OAAO,CAAC,KAAK,CACd,CAAC;QAEF,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACP,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,MAAM,CAAC;YACL,YAAY,EAAE,IAAI;SACnB,CAAC;IACJ,CAAC;IACH,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACjByC;AAC4B;AACF;AACX;AACD;AAOxD;IAGE,2BACS,OAAsB,EACtB,YAA0B,EAC1B,SAA0B,EACjC,WAAwB;QAHjB,YAAO,GAAP,OAAO,CAAe;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,cAAS,GAAT,SAAS,CAAiB;QAGjC,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,KAAK,CAAC;YACzC,KAAK,EAAE;gBACL,EAAE;gBACF,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,yEAAc,CAAC,OAAO,CAAC,CAAC;aAClE;SACF,CAAC,CAAC;IACL,CAAC;IACD,yCAAa,GAAb;QAAA,iBAgCC;QA/BC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;YAClC,OAAO,CAAC,GAAG,CACT,2CAAyC,IAAI,CAAC,iBAAiB,CAAC,KAAO,CACxE,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,KAAK,GAAW,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC;YACzD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CACzC,cAAI;gBACF,IAAM,KAAK,GAAU,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBACzC,OAAO,EAAE,4CAA4C;oBACrD,OAAO,EAAE;wBACP;4BACE,IAAI,EAAE,IAAI;4BACV,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE;gCACP,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;4BACrB,CAAC;yBACF;qBACF;iBACF,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC,EACD,eAAK;gBACH,IAAM,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBACvC,OAAO,EAAE,KAAK,CAAC,OAAO;oBACtB,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;iBAC1C,CAAC,CAAC;gBACH,UAAU,CAAC,OAAO,EAAE,CAAC;YACvB,CAAC,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IAhDU,iBAAiB;QAJ7B,wEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;WACG;SACnC,CAAC;uFAK+B;YACR,sEAAY;YACf,qEAAe;YACpB,WAAW;OAPf,iBAAiB,CAiD7B;IAAD,CAAC;AAAA;SAjDY,iBAAiB,gB","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ResetPasswordPage } from './reset-password';\n\n@NgModule({\n  declarations: [\n    ResetPasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ResetPasswordPage),\n  ],\n})\nexport class ResetPasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.module.ts","import { FormControl } from '@angular/forms';\n\nexport class EmailValidator {\n  static isValid(control: FormControl) {\n    const re = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/\n    .test(\n      control.value\n    );\n\n    if (re) {\n      return null;\n    }\n\n    return {\n      invalidEmail: true\n    };\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","import { Component } from \"@angular/core\";\nimport {\n  Alert,\n  AlertController,\n  IonicPage,\n  NavController\n} from \"ionic-angular\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthProvider } from \"../../providers/auth/auth\";\nimport { EmailValidator } from \"../../validators/email\";\n\n@IonicPage()\n@Component({\n  selector: \"page-reset-password\",\n  templateUrl: \"reset-password.html\"\n})\nexport class ResetPasswordPage {\n  public resetPasswordForm: FormGroup;\n\n  constructor(\n    public navCtrl: NavController,\n    public authProvider: AuthProvider,\n    public alertCtrl: AlertController,\n    formBuilder: FormBuilder\n  ) {\n    this.resetPasswordForm = formBuilder.group({\n      email: [\n        \"\",\n        Validators.compose([Validators.required, EmailValidator.isValid])\n      ]\n    });\n  }\n  resetPassword(): void {\n    if (!this.resetPasswordForm.valid) {\n      console.log(\n        `Form is not valid yet, current value: ${this.resetPasswordForm.value}`\n      );\n    } else {\n      const email: string = this.resetPasswordForm.value.email;\n      this.authProvider.resetPassword(email).then(\n        user => {\n          const alert: Alert = this.alertCtrl.create({\n            message: \"Check your email for a password reset link\",\n            buttons: [\n              {\n                text: \"Ok\",\n                role: \"cancel\",\n                handler: () => {\n                  this.navCtrl.pop();\n                }\n              }\n            ]\n          });\n          alert.present();\n        },\n        error => {\n          const errorAlert = this.alertCtrl.create({\n            message: error.message,\n            buttons: [{ text: \"Ok\", role: \"cancel\" }]\n          });\n          errorAlert.present();\n        }\n      );\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.ts"],"sourceRoot":""}